// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(cuid())
  name       String
  email      String   @unique
  externalId String   @unique
  userIcon   String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Workspace {
  id        String            @id @default(cuid())
  name      String
  createdBy String
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt
  members   WorkspaceMember[]
}

model WorkspaceMember {
  id          String    @id @default(cuid())
  userId      String
  workspaceId String
  role        String // 'owner' | 'editor' | 'viewer'
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  workspace   Workspace @relation(fields: [workspaceId], references: [id])

  @@unique([userId, workspaceId])
  @@index([userId])
  @@index([workspaceId])
}

model Document {
  id          String   @id @default(cuid())
  title       String
  userId      String
  isArchived  Boolean  @default(false)
  parentId    String?
  content     String?
  coverImage  String?
  icon        String?
  isPublished Boolean  @default(false)
  workspaceId String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId])
  @@index([workspaceId])
  @@index([userId, parentId])
  @@index([workspaceId, parentId])
}
